@model MusicApp.Models.TrackAddFormViewModel

@{
    ViewBag.Title = "Add new track";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Add", "Tracks", FormMethod.Post, new { @route = "Tracks/Add" })) 
{
    @Html.AntiForgeryToken()
    
<div>
    <h4>Complete the form, and click the Create button</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row mb-3">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Composer, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Composer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Composer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Milliseconds, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Milliseconds, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Milliseconds, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.AlbumList, "Album", htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.DropDownList(
                "AlbumId",
                Model.AlbumList,
                new
                {
                    @class = "form-select",
                    size = "10" // Shows 10 rows in the dropdown
                }
            )
            @Html.ValidationMessageFor(model => model.AlbumList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.Label("Media Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var mediaType in Model.MediaTypeList)
            {
                <div class="form-check form-check-inline">
                    <input type="radio" class="form-check-input"
                           id="@mediaType.Value"
                           name="MediaTypeId"
                           value="@mediaType.Value"
                           @(mediaType.Text == "MPEG audio file" ? "checked" : "") />
                    <label class="form-check-label" for="@mediaType.Value">@mediaType.Text</label>
                </div>
            }
            @Html.ValidationMessageFor(model => model.MediaTypeList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-sm-2"></div>
        <div class="col-sm-10">
            <input type="submit" value="Create" class="btn btn-outline-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Tracks", null, new { style = "text-decoration:none" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
